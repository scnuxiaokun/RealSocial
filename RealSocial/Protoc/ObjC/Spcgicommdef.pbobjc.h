// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spcgicommdef.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RSenCgiErrorCode

typedef GPB_ENUM(RSenCgiErrorCode) {
  /** Comm::kOK */
  RSenCgiErrorCode_KOk = 0,

  /** Comm::kErrArgs */
  RSenCgiErrorCode_KErrArgs = -2,

  /** Comm::kErrSys */
  RSenCgiErrorCode_KErrSys = -3,
};

GPBEnumDescriptor *RSenCgiErrorCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenCgiErrorCode_IsValidValue(int32_t value);

#pragma mark - Enum RSenLoginOpCode

typedef GPB_ENUM(RSenLoginOpCode) {
  RSenLoginOpCode_LoginOpcodeHome = 0,
  RSenLoginOpCode_LoginOpcodeRegisterFace = 1,
};

GPBEnumDescriptor *RSenLoginOpCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenLoginOpCode_IsValidValue(int32_t value);

#pragma mark - Enum RSenDelFlag

typedef GPB_ENUM(RSenDelFlag) {
  RSenDelFlag_DelflagExist = 0,
  RSenDelFlag_DelflagNotExist = 1,
};

GPBEnumDescriptor *RSenDelFlag_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenDelFlag_IsValidValue(int32_t value);

#pragma mark - Enum RSenSyncType

/**
 *
 *  按位使用
 **/
typedef GPB_ENUM(RSenSyncType) {
  /** 0x1 */
  RSenSyncType_SyncTypeProfile = 1,

  /** 0x2 */
  RSenSyncType_SyncTypeContact = 2,

  /** 0x4 */
  RSenSyncType_SyncTypeGroup = 4,
};

GPBEnumDescriptor *RSenSyncType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenSyncType_IsValidValue(int32_t value);

#pragma mark - Enum RSenAddFriendOpCode

typedef GPB_ENUM(RSenAddFriendOpCode) {
  /** 图像识别失败 */
  RSenAddFriendOpCode_AddFriendOpcodeFail = 0,

  /** 等待确认 */
  RSenAddFriendOpCode_AddFriendOpcodeNeedConfirm = 1,

  /** 成功添加好友 */
  RSenAddFriendOpCode_AddFriendOpcodeAddBefore = 2,

  /** 成功添加好友 */
  RSenAddFriendOpCode_AddFriendOpcodeSucc = 3,
};

GPBEnumDescriptor *RSenAddFriendOpCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenAddFriendOpCode_IsValidValue(int32_t value);

#pragma mark - Enum RSenSex

typedef GPB_ENUM(RSenSex) {
  RSenSex_SexUnknow = 0,
  RSenSex_SexMale = 1,
  RSenSex_SexFemale = 2,
};

GPBEnumDescriptor *RSenSex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenSex_IsValidValue(int32_t value);

#pragma mark - Enum RSenDeviceType

typedef GPB_ENUM(RSenDeviceType) {
  RSenDeviceType_DevicetypeIphone = 1,
  RSenDeviceType_DevicetypeAndriod = 2,
};

GPBEnumDescriptor *RSenDeviceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenDeviceType_IsValidValue(int32_t value);

#pragma mark - Enum RSenSpaceType

typedef GPB_ENUM(RSenSpaceType) {
  RSenSpaceType_SpaceTypeSingle = 1,
  RSenSpaceType_SpaceTypeGroup = 2,
};

GPBEnumDescriptor *RSenSpaceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenSpaceType_IsValidValue(int32_t value);

#pragma mark - Enum RSenStarType

typedef GPB_ENUM(RSenStarType) {
  RSenStarType_StarTypeImg = 1,
  RSenStarType_StarTypeVideo = 2,
};

GPBEnumDescriptor *RSenStarType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenStarType_IsValidValue(int32_t value);

#pragma mark - Enum RSenReceiverType

typedef GPB_ENUM(RSenReceiverType) {
  /** 个人创作 - 自己 */
  RSenReceiverType_ReceiverTypeCreator = 1,

  /** 个人创作 - 列表 */
  RSenReceiverType_ReceiverTypeList = 2,

  /** 个人创作 - 好友 */
  RSenReceiverType_ReceiverTypeCreatorFriend = 3,

  /** 多人创作 - 创作者 */
  RSenReceiverType_ReceiverTypeAuthor = 4,

  /** 多人创作 - 创作者好友 */
  RSenReceiverType_ReceiverTypeAuthorFriend = 5,
};

GPBEnumDescriptor *RSenReceiverType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RSenReceiverType_IsValidValue(int32_t value);

#pragma mark - RSSpcgicommdefRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RSSpcgicommdefRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
