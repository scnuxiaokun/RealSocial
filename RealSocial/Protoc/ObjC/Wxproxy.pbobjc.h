// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wxproxy.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum enWxAcct

typedef GPB_ENUM(enWxAcct) {
  /** App */
  enWxAcct_WxacctApp = 1,

  /** 公众号 */
  enWxAcct_WxacctBiz = 2,

  /** 小程序 */
  enWxAcct_WxacctWxapp = 3,

  /** 测试公众号 */
  enWxAcct_WxacctBizTest = 4,
};

GPBEnumDescriptor *enWxAcct_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL enWxAcct_IsValidValue(int32_t value);

#pragma mark - Enum enWxSex

typedef GPB_ENUM(enWxSex) {
  enWxSex_WxsexMale = 1,
  enWxSex_WxsexFemale = 2,
};

GPBEnumDescriptor *enWxSex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL enWxSex_IsValidValue(int32_t value);

#pragma mark - WxproxyRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface WxproxyRoot : GPBRootObject
@end

#pragma mark - WxCertInfo

typedef GPB_ENUM(WxCertInfo_FieldNumber) {
  WxCertInfo_FieldNumber_AppId = 1,
  WxCertInfo_FieldNumber_AppSecret = 2,
};

@interface WxCertInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;
/** Test to see if @c appId has been set. */
@property(nonatomic, readwrite) BOOL hasAppId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appSecret;
/** Test to see if @c appSecret has been set. */
@property(nonatomic, readwrite) BOOL hasAppSecret;

@end

#pragma mark - CodeToAccessTokenReq

typedef GPB_ENUM(CodeToAccessTokenReq_FieldNumber) {
  CodeToAccessTokenReq_FieldNumber_WxAcct = 1,
  CodeToAccessTokenReq_FieldNumber_Code = 2,
};

@interface CodeToAccessTokenReq : GPBMessage

@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;
/** Test to see if @c code has been set. */
@property(nonatomic, readwrite) BOOL hasCode;

@end

#pragma mark - CodeToAccessTokenResp

typedef GPB_ENUM(CodeToAccessTokenResp_FieldNumber) {
  CodeToAccessTokenResp_FieldNumber_AccessToken = 1,
  CodeToAccessTokenResp_FieldNumber_ExpiresIn = 2,
  CodeToAccessTokenResp_FieldNumber_RefreshToken = 3,
  CodeToAccessTokenResp_FieldNumber_OpenId = 4,
  CodeToAccessTokenResp_FieldNumber_Scope = 5,
  CodeToAccessTokenResp_FieldNumber_UnionId = 6,
  CodeToAccessTokenResp_FieldNumber_TestArray = 7,
};

@interface CodeToAccessTokenResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite) uint32_t expiresIn;

@property(nonatomic, readwrite) BOOL hasExpiresIn;
@property(nonatomic, readwrite, copy, null_resettable) NSString *refreshToken;
/** Test to see if @c refreshToken has been set. */
@property(nonatomic, readwrite) BOOL hasRefreshToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *scope;
/** Test to see if @c scope has been set. */
@property(nonatomic, readwrite) BOOL hasScope;

@property(nonatomic, readwrite, copy, null_resettable) NSString *unionId;
/** Test to see if @c unionId has been set. */
@property(nonatomic, readwrite) BOOL hasUnionId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *testArray;
/** The number of items in @c testArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger testArray_Count;

@end

#pragma mark - RefreshAccessTokenReq

typedef GPB_ENUM(RefreshAccessTokenReq_FieldNumber) {
  RefreshAccessTokenReq_FieldNumber_Uin = 1,
  RefreshAccessTokenReq_FieldNumber_WxAcct = 2,
  RefreshAccessTokenReq_FieldNumber_RefreshToken = 3,
};

@interface RefreshAccessTokenReq : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
/**
 * 应该由模块本身维护所有与微信内概念
 * 外界不需要理解微信如何鉴权，
 * 不维护 access_token 概念
 * 为调试方便，暂时支持传入 refresh_token
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *refreshToken;
/** Test to see if @c refreshToken has been set. */
@property(nonatomic, readwrite) BOOL hasRefreshToken;

@end

#pragma mark - RefreshAccessTokenResp

typedef GPB_ENUM(RefreshAccessTokenResp_FieldNumber) {
  RefreshAccessTokenResp_FieldNumber_AccessToken = 1,
  RefreshAccessTokenResp_FieldNumber_ExpiresIn = 2,
  RefreshAccessTokenResp_FieldNumber_RefreshToken = 3,
  RefreshAccessTokenResp_FieldNumber_OpenId = 4,
  RefreshAccessTokenResp_FieldNumber_Scope = 5,
};

@interface RefreshAccessTokenResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite) uint32_t expiresIn;

@property(nonatomic, readwrite) BOOL hasExpiresIn;
@property(nonatomic, readwrite, copy, null_resettable) NSString *refreshToken;
/** Test to see if @c refreshToken has been set. */
@property(nonatomic, readwrite) BOOL hasRefreshToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *scope;
/** Test to see if @c scope has been set. */
@property(nonatomic, readwrite) BOOL hasScope;

@end

#pragma mark - SnsAuthReq

typedef GPB_ENUM(SnsAuthReq_FieldNumber) {
  SnsAuthReq_FieldNumber_Uin = 1,
  SnsAuthReq_FieldNumber_WxAcct = 2,
  SnsAuthReq_FieldNumber_AccessToken = 3,
  SnsAuthReq_FieldNumber_OpenId = 4,
};

@interface SnsAuthReq : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
/**
 * 应该由模块本身维护所有与微信内概念
 * 外界不需要理解微信如何鉴权，
 * 不维护 access_token 概念
 * 为调试方便，暂时支持传入 access_token openid
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@end

#pragma mark - SnsAuthResp

@interface SnsAuthResp : GPBMessage

@end

#pragma mark - SnsUserInfoReq

typedef GPB_ENUM(SnsUserInfoReq_FieldNumber) {
  SnsUserInfoReq_FieldNumber_Uin = 1,
  SnsUserInfoReq_FieldNumber_WxAcct = 2,
  SnsUserInfoReq_FieldNumber_AccessToken = 3,
  SnsUserInfoReq_FieldNumber_OpenId = 4,
};

@interface SnsUserInfoReq : GPBMessage

@property(nonatomic, readwrite) uint32_t uin;

@property(nonatomic, readwrite) BOOL hasUin;
@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
/**
 * 应该由模块本身维护所有与微信内概念
 * 外界不需要理解微信如何鉴权，
 * 不维护 access_token 概念
 * 为调试方便，暂时支持传入 access_token openid
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@end

#pragma mark - SnsUserInfoResp

typedef GPB_ENUM(SnsUserInfoResp_FieldNumber) {
  SnsUserInfoResp_FieldNumber_OpenId = 1,
  SnsUserInfoResp_FieldNumber_NickName = 2,
  SnsUserInfoResp_FieldNumber_Sex = 3,
  SnsUserInfoResp_FieldNumber_Province = 4,
  SnsUserInfoResp_FieldNumber_City = 5,
  SnsUserInfoResp_FieldNumber_Country = 6,
  SnsUserInfoResp_FieldNumber_HeadImgURL = 7,
  SnsUserInfoResp_FieldNumber_UnionId = 8,
};

@interface SnsUserInfoResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImgURL;
/** Test to see if @c headImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *unionId;
/** Test to see if @c unionId has been set. */
@property(nonatomic, readwrite) BOOL hasUnionId;

@end

#pragma mark - AccessTokenReq

typedef GPB_ENUM(AccessTokenReq_FieldNumber) {
  AccessTokenReq_FieldNumber_WxAcct = 1,
};

@interface AccessTokenReq : GPBMessage

@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
@end

#pragma mark - AccessTokenResp

typedef GPB_ENUM(AccessTokenResp_FieldNumber) {
  AccessTokenResp_FieldNumber_AccessToken = 1,
  AccessTokenResp_FieldNumber_ExpiresIn = 2,
};

@interface AccessTokenResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite) int32_t expiresIn;

@property(nonatomic, readwrite) BOOL hasExpiresIn;
@end

#pragma mark - UserInfoReq

typedef GPB_ENUM(UserInfoReq_FieldNumber) {
  UserInfoReq_FieldNumber_WxAcct = 1,
  UserInfoReq_FieldNumber_Openid = 2,
  UserInfoReq_FieldNumber_AccessToken = 3,
};

@interface UserInfoReq : GPBMessage

@property(nonatomic, readwrite) enWxAcct wxAcct;

@property(nonatomic, readwrite) BOOL hasWxAcct;
@property(nonatomic, readwrite, copy, null_resettable) NSString *openid;
/** Test to see if @c openid has been set. */
@property(nonatomic, readwrite) BOOL hasOpenid;

/**
 * 应该由模块本身维护所有与微信内概念
 * 外界不需要理解微信如何鉴权，
 * 不维护 access_token 概念
 * 为调试方便，暂时支持传入 access_token
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@end

#pragma mark - UserInfoResp

typedef GPB_ENUM(UserInfoResp_FieldNumber) {
  UserInfoResp_FieldNumber_Subscribe = 1,
  UserInfoResp_FieldNumber_OpenId = 2,
  UserInfoResp_FieldNumber_NickName = 3,
  UserInfoResp_FieldNumber_Sex = 4,
  UserInfoResp_FieldNumber_City = 5,
  UserInfoResp_FieldNumber_Country = 6,
  UserInfoResp_FieldNumber_Province = 7,
  UserInfoResp_FieldNumber_Language = 8,
  UserInfoResp_FieldNumber_HeadImgURL = 9,
  UserInfoResp_FieldNumber_SubscribeTime = 10,
  UserInfoResp_FieldNumber_UnionId = 11,
  UserInfoResp_FieldNumber_Remark = 12,
  UserInfoResp_FieldNumber_GroupId = 13,
  UserInfoResp_FieldNumber_TagIdListArray = 14,
};

@interface UserInfoResp : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *subscribe;
/** Test to see if @c subscribe has been set. */
@property(nonatomic, readwrite) BOOL hasSubscribe;

@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;
/** Test to see if @c openId has been set. */
@property(nonatomic, readwrite) BOOL hasOpenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;
/** Test to see if @c nickName has been set. */
@property(nonatomic, readwrite) BOOL hasNickName;

@property(nonatomic, readwrite) uint32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
@property(nonatomic, readwrite, copy, null_resettable) NSString *city;
/** Test to see if @c city has been set. */
@property(nonatomic, readwrite) BOOL hasCity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *province;
/** Test to see if @c province has been set. */
@property(nonatomic, readwrite) BOOL hasProvince;

@property(nonatomic, readwrite, copy, null_resettable) NSString *language;
/** Test to see if @c language has been set. */
@property(nonatomic, readwrite) BOOL hasLanguage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headImgURL;
/** Test to see if @c headImgURL has been set. */
@property(nonatomic, readwrite) BOOL hasHeadImgURL;

@property(nonatomic, readwrite) uint32_t subscribeTime;

@property(nonatomic, readwrite) BOOL hasSubscribeTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *unionId;
/** Test to see if @c unionId has been set. */
@property(nonatomic, readwrite) BOOL hasUnionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;
/** Test to see if @c remark has been set. */
@property(nonatomic, readwrite) BOOL hasRemark;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *tagIdListArray;
/** The number of items in @c tagIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tagIdListArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
